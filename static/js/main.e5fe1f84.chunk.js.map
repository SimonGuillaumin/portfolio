{"version":3,"sources":["logo.svg","components/ThemeSwitcher.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeSwitcher","state","theme","resetTheme","evt","preventDefault","setState","chooseTheme","this","themeClass","toLowerCase","className","type","data-toggle","aria-haspopup","aria-expanded","href","onClick","e","class","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,I,iCCsDAA,E,4MAlDbC,MAAQ,CAAEC,MAAO,M,EAEjBC,WAAa,SAAAC,GACXA,EAAIC,iBACJ,EAAKC,SAAS,CAAEJ,MAAO,Q,EAGzBK,YAAc,SAACL,EAAOE,GACpBA,EAAIC,iBACJ,EAAKC,SAAS,CAAEJ,W,uDAGR,IAAD,OAECA,EAAUM,KAAKP,MAAfC,MACFO,EAAaP,EAAQA,EAAMQ,cAAgB,YAEjD,OACE,sBAAKC,UAAU,gHAAf,UAEE,sBAAMA,UAAS,yCAAoCF,GAAnD,SAAmEP,GAAS,YAE5E,sBAAKS,UAAU,YAAf,UAEE,yBAAQC,KAAK,SAASD,UAAS,kBAAaF,EAAb,WAA/B,UAAmEP,GAAS,SAA5E,YAEA,wBAAQU,KAAK,SAASD,UAAS,kBAAaF,EAAb,iDAAwEI,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,QAAjK,SACE,sBAAMJ,UAAU,UAAhB,qCAGF,sBAAKA,UAAU,gBAAf,UAEE,mBAAGA,UAAU,gBAAgBK,KAAK,IAAIC,QAAS,SAAAC,GAAC,OAAI,EAAKX,YAAY,UAAWW,IAAhF,6BACA,mBAAGP,UAAU,gBAAgBK,KAAK,IAAIC,QAAS,SAAAC,GAAC,OAAI,EAAKX,YAAY,SAAUW,IAA/E,0BACA,mBAAGC,MAAM,gBAAgBH,KAAK,IAAIC,QAAS,SAAAC,GAAC,OAAI,EAAKX,YAAY,UAAWW,IAA5E,2BAEA,qBAAKP,UAAU,qBAEf,mBAAGA,UAAU,gBAAgBK,KAAK,IAAIC,QAAST,KAAKL,WAApD,wC,GAxCgBiB,aCcbC,MAZf,WACE,OACE,qBAAKV,UAAU,MAAf,SAEC,cAAC,EAAD,OCIUW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5fe1f84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\n\r\nclass ThemeSwitcher extends Component {\r\n\r\n  state = { theme: null }\r\n  \r\n  resetTheme = evt => {\r\n    evt.preventDefault();\r\n    this.setState({ theme: null });\r\n  }\r\n  \r\n  chooseTheme = (theme, evt) => {\r\n    evt.preventDefault();\r\n    this.setState({ theme });\r\n  }\r\n  \r\n  render() {\r\n  \r\n    const { theme } = this.state;\r\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';\r\n    \r\n    return (\r\n      <div className=\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\">\r\n      \r\n        <span className={`h1 mb-4 w-100 text-center text-${themeClass}`}>{ theme || 'Default' }</span>\r\n        \r\n        <div className=\"btn-group\">\r\n        \r\n          <button type=\"button\" className={`btn btn-${themeClass} btn-lg`}>{ theme || 'Choose' } Theme</button>\r\n          \r\n          <button type=\"button\" className={`btn btn-${themeClass} btn-lg dropdown-toggle dropdown-toggle-split`} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <span className=\"sr-only\">Toggle Theme Dropdown</span>\r\n          </button>\r\n          \r\n          <div className=\"dropdown-menu\">\r\n          \r\n            <a className=\"dropdown-item\" href=\"#\" onClick={e => this.chooseTheme('Primary', e)}>Theme Principal</a>\r\n            <a className=\"dropdown-item\" href=\"#\" onClick={e => this.chooseTheme('Danger', e)}>Danger Theme</a>\r\n            <a class=\"dropdown-item\" href=\"#\" onClick={e => this.chooseTheme('Success', e)}>Success Theme</a>\r\n            \r\n            <div className=\"dropdown-divider\"></div>\r\n            \r\n            <a className=\"dropdown-item\" href=\"#\" onClick={this.resetTheme}>Default Theme</a>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport default ThemeSwitcher;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport ThemeSwitcher from './components/ThemeSwitcher.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     \r\n     <ThemeSwitcher/>\r\n     \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}