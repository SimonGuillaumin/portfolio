[{"C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\reportWebVitals.js":"1","C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\App.js":"2","C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\components\\ThemeSwitcher.js":"3","C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\index.js":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":240,"mtime":1606675619371,"results":"7","hashOfConfig":"6"},{"size":1868,"mtime":1606675371513,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13721a1",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\reportWebVitals.js",[],"C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\App.js",["19"],"C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\components\\ThemeSwitcher.js",["20","21","22","23"],"import React, { Component } from 'react';\r\n\r\nclass ThemeSwitcher extends Component {\r\n\r\n  state = { theme: null }\r\n  \r\n  resetTheme = evt => {\r\n    evt.preventDefault();\r\n    this.setState({ theme: null });\r\n  }\r\n  \r\n  chooseTheme = (theme, evt) => {\r\n    evt.preventDefault();\r\n    this.setState({ theme });\r\n  }\r\n  \r\n  render() {\r\n  \r\n    const { theme } = this.state;\r\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';\r\n    \r\n    return (\r\n      <div className=\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\">\r\n      \r\n        <span className={`h1 mb-4 w-100 text-center text-${themeClass}`}>{ theme || 'Default' }</span>\r\n        \r\n        <div className=\"btn-group\">\r\n        \r\n          <button type=\"button\" className={`btn btn-${themeClass} btn-lg`}>{ theme || 'Choose' } Theme</button>\r\n          \r\n          <button type=\"button\" className={`btn btn-${themeClass} btn-lg dropdown-toggle dropdown-toggle-split`} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <span className=\"sr-only\">Toggle Theme Dropdown</span>\r\n          </button>\r\n          \r\n          <div className=\"dropdown-menu\">\r\n          \r\n            <a className=\"dropdown-item\" href=\"#\" onClick={e => this.chooseTheme('Primary', e)}>Primary Theme</a>\r\n            <a className=\"dropdown-item\" href=\"#\" onClick={e => this.chooseTheme('Danger', e)}>Danger Theme</a>\r\n            <a class=\"dropdown-item\" href=\"#\" onClick={e => this.chooseTheme('Success', e)}>Success Theme</a>\r\n            \r\n            <div className=\"dropdown-divider\"></div>\r\n            \r\n            <a className=\"dropdown-item\" href=\"#\" onClick={this.resetTheme}>Default Theme</a>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport default ThemeSwitcher;","C:\\Users\\simon\\Documents\\Formations\\Greta - formation dev\\Sites React\\my-app-portfolio2\\src\\index.js",[],{"ruleId":"24","severity":1,"message":"25","line":1,"column":8,"nodeType":"26","messageId":"27","endLine":1,"endColumn":12},{"ruleId":"28","severity":1,"message":"29","line":37,"column":13,"nodeType":"30","endLine":37,"endColumn":97},{"ruleId":"28","severity":1,"message":"29","line":38,"column":13,"nodeType":"30","endLine":38,"endColumn":96},{"ruleId":"28","severity":1,"message":"29","line":39,"column":13,"nodeType":"30","endLine":39,"endColumn":93},{"ruleId":"28","severity":1,"message":"29","line":43,"column":13,"nodeType":"30","endLine":43,"endColumn":77},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]